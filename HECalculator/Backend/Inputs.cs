using System;

public class Inputs
{
    public Inputs()
    {
    }

    /// <summary>
    /// Input for empty weight of the item hoisted by the lug. 
    /// At the moment input must be entered in Newtons (N).
    /// </summary>
    private double _emptyW;
    /// <summary>
    /// Input for the material description. No validation is added for the time being. 
    /// Preferred entry should follow the guidlines from common construction codes. 
    /// Will use a material database when fully upgraded.
    /// </summary>
    private string _matDesc;
    /// <summary>
    /// Input for the material yield strength. 
    /// At the moment input must be entered in Mega-Pascals (MPa).
    /// Must be alligned with material specification values for yield strength at 20degC. 
    /// Will use a database in the future.
    /// </summary>
    private double _matYield;
    /// <summary>
    /// Input for lifting lug width.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llWidth;
    /// <summary>
    /// Input for lifting lug thickness.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llThk;
    /// <summary>
    /// Input for lifting lug hole diameter.
    /// The thickness is constant throught.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llHoleDia;
    /// <summary>
    /// Input for lifting lug semi-circular arc.
    /// It is assumed that the center of the hole is in the center of the radius of the lifting lug.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llSCArcRad;
    /// <summary>
    /// Distance from holes to the edges of the lug measured from one edge.
    /// The value will be autogenerated from lug width as the only supported lug configuration must conform to _llWidth=2*_llSCArcRad.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llBottToHoleDist;
    /// <summary>
    /// Input for the distance of the hole to the joint with the vessel which it is welded to.
    /// At the moment input must be entered in millimeters (mm).
    /// </summary>
    private double _llODOffToHole;
    /// <summary>
    /// Input for the Axial force acting on the lug and tends to bend the bottom of the lug along its strongest axis.
    /// At the moment input must be entered in Newtons (N).
    /// </summary>
    private double _forceAX;
    /// <summary>
    /// Input for the Normal force which tends to bend the lug upwards.
    /// At the moment input must be entered in Newtons (N).
    /// </summary>
    private double _forceN;
    /// <summary>
    /// Input for the Tangential force acting laterally on a lug over its weakest axis. This force is usually about 5% of the total force acting.
    /// At the moment input must be entered in Newtons (N).
    /// </summary>
    private double _forceT;
    /// <summary>
    /// Input for the impact factor, safety factor that increases all the forces. It cannot be less than 1. It is usually 1.5 to 2.
    /// </summary>
    private double _impactFac;

    public double EmptyW { get => _emptyW; set => _emptyW = value; }
    public string MatDesc { get => _matDesc; set => _matDesc = value; }
    public double MatYield { get => _matYield; set => _matYield = value; }
    public double LlWidth { get => _llWidth; set => _llWidth = value; }
    public double LlThk { get => _llThk; set => _llThk = value; }
    public double LlHoleDia { get => _llHoleDia; set => _llHoleDia = value; }
    public double LlSCArcRad { get => _llSCArcRad; set => _llSCArcRad = value; }
    public double LlBottToHoleDist { get => _llBottToHoleDist; set => _llBottToHoleDist = value; }
    public double LlODOffToHole { get => _llODOffToHole; set => _llODOffToHole = value; }
    public double ForceAX { get => _forceAX; set => _forceAX = value; }
    public double ForceN { get => _forceN; set => _forceN = value; }
    public double ForceT { get => _forceT; set => _forceT = value; }
    public double ImpactFac { get => _impactFac; set => _impactFac = value; }
}
